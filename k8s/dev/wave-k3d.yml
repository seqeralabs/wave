---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wave
  labels:
    app: wave-app
spec:
  selector:
    matchLabels:
      app: wave-app
  template:
    metadata:
      labels:
        app: wave-app
    spec:
      containers:
        - image: wave
          name: wave-app
          ports:
            - containerPort: 9090
          env:
            - name: MICRONAUT_ENVIRONMENTS
              value: "dev,h2,surrealdb,redis"
            - name: WAVE_JVM_OPTS
              value: "-XX:InitialRAMPercentage=50 -XX:MaxRAMPercentage=70 -XX:+HeapDumpOnOutOfMemoryError"
            - name: JAVA_TOOL_OPTIONS
              value: ''
          resources:
            requests:
              memory: "2000Mi"
            limits:
              memory: "2000Mi"
          workingDir: "/work"
          volumeMounts:
            - name: "vol-build"
              mountPath: "/efs/wave/build"
            - name: wave-cfg
              mountPath: /work/config.yml
              subPath: "config.yml"
      serviceAccountName: wave-sa
      volumes:
        - name: vol-build
          persistentVolumeClaim:
            claimName: wave-build
        - name: wave-cfg
          configMap:
            name: wave-cfg
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: wave-service
spec:
  ports:
    - port: 80
      targetPort: 9090
      protocol: TCP
  type: NodePort
  selector:
    app: "wave-app"
---
# apiVersion: networking.k8s.io/v1beta1 # for k3s < v1.19
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: wave-ingress
  labels:
    app: wave-app
  annotations:
    ingress.kubernetes.io/ssl-redirect: "true"
spec:
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: wave-service
                port:
                  number: 80

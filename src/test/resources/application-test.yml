micronaut:
  http:
    client:
      read-timeout: 90s
      max-content-length: 20Mb
  codec:
    json:
      additionalTypes:
        - application/vnd.docker.distribution.manifest.list.v2+json
  object-storage:
    aws:
      build-logs:
        bucket: "${wave.build.logs.bucket}"
---
datasources:
  default:
    url: "jdbc:h2:mem:test_mem"
    driverClassName: "org.h2.Driver"
    username: "sq"
    password: ""
    dialect: H2
    schema-generate: CREATE_DROP
---
wave:
  registries:
    default: docker.io
    docker.io:
      username: ${DOCKER_USER:test}
      password: ${DOCKER_PAT:test}
    quay.io:
      username: ${QUAY_USER:test}
      password: ${QUAY_PAT:test}
    195996028523.dkr.ecr.eu-west-1.amazonaws.com:
      username: ${AWS_ACCESS_KEY_ID:test}
      password: ${AWS_SECRET_ACCESS_KEY:test}
    public.ecr.aws:
      username: ${AWS_ACCESS_KEY_ID:test}
      password: ${AWS_SECRET_ACCESS_KEY:test}
    seqeralabs.azurecr.io:
      username: ${AZURECR_USER:test}
      password: ${AZURECR_PAT:test}
    europe-southwest1-docker.pkg.dev:
      credentials : ${GOOGLECR_KEYS:test}
    quay.io/test/public/repo:
      username: 'foo'
      password: 'bar'
  build:
    workspace: 'build-workspace'
    spack:
      cacheDirectory: "spack-cache"
    logs :
      enabled : true
      bucket : 'nextflow-ci'
      prefix : 'wave-build/logs'
  scan:
    enabled: true
---
logger:
  levels:
    io.micronaut.data.query: "DEBUG"
---
redis :
  pool :
    enabled : false
  health:
    enabled: false
---

---
micronaut:
  application:
    name: wave-app
  caches :
    cache-20sec:
      expire-after-access: 20s
    cache-1min:
      expire-after-access: 1m
    # Discovery client by default uses a cache for results. This is a transitive behaviour
    # introduced by prometheus and management dependencies and below line disables as
    # it is unused at the moment by the wave project. See https://micronaut-projects.github.io/micronaut-discovery-client/latest/guide/#introduction
    discovery-client :
      enabled : false
  server:
    port: 9090
    # https://docs.micronaut.io/latest/guide/#atBlocking
    thread-selection: AUTO
    # note this should be >= the build timeout (which is 15 minutes) see below
    idle-timeout: 910s
  views :
    folder : io/seqera/wave
  router:
    static-resources:
      css:
        paths: 'classpath:io/seqera/wave/css'
        mapping: '/css/**'
        enabled: true
      assets:
        paths: 'classpath:io/seqera/wave/assets'
        mapping: '/assets/**'
        enabled: true
# http client configuration
# https://docs.micronaut.io/latest/guide/configurationreference.html#io.micronaut.http.client.DefaultHttpClientConfiguration
  executors:
    stream-executor:
      type: FIXED
      number-of-threads: 16
  netty:
    event-loops:
      stream-pool:
        executor: 'stream-executor'
  http:
    services:
      stream-client:
        read-timeout: '30s'
        read-idle-timeout: '120s'
        event-loop-group: 'stream-pool'
---
wave:
  allowAnonymous: true
  server:
      url: "${WAVE_SERVER_URL:`http://localhost:9090`}"
  build:
    kaniko-image: "gcr.io/kaniko-project/executor:v1.19.2"
    singularity-image: "quay.io/singularity/singularity:v3.11.4-slim"
    singularity-image-arm64: "quay.io/singularity/singularity:v3.11.4-slim-arm64"
    repo: "195996028523.dkr.ecr.eu-west-1.amazonaws.com/wave/build/dev"
    cache: "195996028523.dkr.ecr.eu-west-1.amazonaws.com/wave/build/cache"
    # note changing this should be matching the micronaut.server.idle-timeout (see above)
    timeout: 900s
    status:
      delay: 5s
      duration: 1d
  httpclient:
    retry:
      delay: '500ms'
      attempts: 5
      multiplier: '1.75'
  scan:
    image:
      name: aquasec/trivy:0.47.0
---
jackson:
  serialization:
    writeDatesAsTimestamps: false
---
logger:
  levels:
    io.seqera: "DEBUG"
    io.micronaut.retry.intercept.RecoveryInterceptor: "OFF"
#   ^^^^^^^^^^^^^^^^^^^^^
#   Disable logs of `RecoveryInterceptor`, as they have been found to be noisy.
#   Declarative `io.micronaut.http.client.annotation.@Client`s are annotated with `io.micronaut.retry.annotation@Recoverable`
#   and throw an exception on every error response by default. `RecoveryInterceptor` ends up logging those exceptions
#   even if they are handled and no actual recovery/fallback logic gets to take place.
#   TODO remove once the project is updated to Micronaut 4.x, as @Client won't be annotated with @Recoverable anymore
#   See https://github.com/micronaut-projects/micronaut-core/issues/3719; https://github.com/micronaut-projects/micronaut-core/pull/8235
...

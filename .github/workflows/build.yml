name: Wave CI
on:
  push:
    branches:
      - '*'
      - '!refs/tags/.*'
    tags-ignore:
      - '*'
  pull_request:
    types: [opened, reopened, synchronize]
    
jobs:
  build:
    name: Build Wave
    if: "github.event == 'push' || github.repository != github.event.pull_request.head.repo.full_name"
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        java_version: [17]

    steps:
      - name: Environment
        run: env | sort

      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
          submodules: true

      - name: Setup Java ${{ matrix.java_version }}
        uses: actions/setup-java@v2
        with:
          java-version: ${{matrix.java_version}}
          distribution: 'adopt'
          architecture: x64
          cache: gradle

      - name: Compile
        run: make compile
        env:
          GRADLE_OPTS: '-Dorg.gradle.daemon=false'

      - name: Tests
        run: |          
          make check
        env:
          GRADLE_OPTS: '-Dorg.gradle.daemon=false'
          GITHUB_TOKEN: ${{ secrets.GH_SEQERA_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{secrets.TOWER_CI_AWS_ACCESS}}
          AWS_SECRET_ACCESS_KEY: ${{secrets.TOWER_CI_AWS_SECRET}}
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PAT: ${{ secrets.DOCKER_PAT }}
          QUAY_USER: ${{ secrets.QUAY_USER }}
          QUAY_PAT: ${{ secrets.QUAY_PAT }}
          AZURECR_USER: ${{ secrets.AZURECR_USER }}
          AZURECR_PAT: ${{ secrets.AZURECR_PAT }}
          GOOGLECR_KEYS: ${{ secrets.GOOGLECR_KEYS }}

      - name: Release
        if: "contains(github.event.head_commit.message, '[release]')"
        run: |
          bash tag-and-push.sh
        env:
          GRADLE_OPTS: '-Dorg.gradle.daemon=false'
          AWS_ACCESS_KEY_ID: ${{secrets.TOWER_CI_AWS_ACCESS}}
          AWS_SECRET_ACCESS_KEY: ${{secrets.TOWER_CI_AWS_SECRET}}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_PAT: ${{ secrets.DOCKER_PAT }}
          QUAY_PAT: ${{ secrets.QUAY_PAT }}
          GITHUB_TOKEN: ${{ secrets.GH_SEQERA_TOKEN }}

      - name: Deploy to staging cluster
        if: "contains(github.event.head_commit.message, '[deploy staging]')"
        uses: ./.github/actions/deploy
        with:
          app: "wave"
          container: "195996028523.dkr.ecr.eu-west-1.amazonaws.com/wave/app"
          namespace: "wave-stage"
          aws-region: "eu-west-2"
          aws-access-key-id: ${{ secrets.TOWER_CI_AWS_ACCESS }}
          aws-secret-access-key: ${{ secrets.TOWER_CI_AWS_SECRET }}
          kube-config-data: ${{ secrets.TOWER_STAGE_KUBE_CONFIG_DATA }}

      - name: Publish tests report
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: test-reports-jdk-${{ matrix.java_version }}
          path: |
            **/build/reports/tests/test

/*
 * Wave API
 * Wave Containers Provisioning Service API A comprehensive container orchestration and build service
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package io.seqera.wave.api.schema.v1;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.function.Function;
import java.util.stream.Collectors;
import com.fasterxml.jackson.annotation.*;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;
import io.micronaut.core.annotation.Introspected;
import io.micronaut.core.annotation.Nullable;
import jakarta.annotation.Generated;

/**
 * Service information model
 */
@JsonPropertyOrder({
    ServiceInfo.JSON_PROPERTY_VERSION,
    ServiceInfo.JSON_PROPERTY_COMMIT_ID,
})
@Generated("io.micronaut.openapi.generator.JavaMicronautServerCodegen")
@Introspected
public class ServiceInfo {

    public static final String JSON_PROPERTY_VERSION = "version";
    public static final String JSON_PROPERTY_COMMIT_ID = "commitId";

    /**
     * Application version
     */
    @NotNull
    @JsonProperty(JSON_PROPERTY_VERSION)
    private String version;

    /**
     * Build commit ID
     */
    @NotNull
    @JsonProperty(JSON_PROPERTY_COMMIT_ID)
    private String commitId;

    private ServiceInfo() {
    }

    public ServiceInfo(String version, String commitId) {
        this.version = version;
        this.commitId = commitId;
    }

    /**
     * Application version
     *
     * @return the version property value
     */
    public String getVersion() {
        return version;
    }

    /**
     * Set the version property value
     *
     * @param version property value to set
     */
    public void setVersion(String version) {
        this.version = version;
    }

    /**
     * Set version in a chainable fashion.
     *
     * @return The same instance of ServiceInfo for chaining.
     */
    public ServiceInfo version(String version) {
        this.version = version;
        return this;
    }

    /**
     * Build commit ID
     *
     * @return the commitId property value
     */
    public String getCommitId() {
        return commitId;
    }

    /**
     * Set the commitId property value
     *
     * @param commitId property value to set
     */
    public void setCommitId(String commitId) {
        this.commitId = commitId;
    }

    /**
     * Set commitId in a chainable fashion.
     *
     * @return The same instance of ServiceInfo for chaining.
     */
    public ServiceInfo commitId(String commitId) {
        this.commitId = commitId;
        return this;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        var serviceInfo = (ServiceInfo) o;
        return Objects.equals(version, serviceInfo.version)
            && Objects.equals(commitId, serviceInfo.commitId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(version, commitId);
    }

    @Override
    public String toString() {
        return "ServiceInfo("
            + "version: " + getVersion() + ", "
            + "commitId: " + getCommitId()
            + ")";
    }

}
/*
 * Wave API
 * Wave Containers Provisioning Service API A comprehensive container orchestration and build service
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package io.seqera.wave.api.schema.v0;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.function.Function;
import java.util.stream.Collectors;
import com.fasterxml.jackson.annotation.*;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;
import io.micronaut.core.annotation.Introspected;
import io.micronaut.core.annotation.Nullable;
import jakarta.annotation.Generated;

/**
 * Registry credentials validation request
 */
@JsonPropertyOrder({
    ValidateRegistryCredsRequest.JSON_PROPERTY_REGISTRY,
    ValidateRegistryCredsRequest.JSON_PROPERTY_USER_NAME,
    ValidateRegistryCredsRequest.JSON_PROPERTY_PASSWORD,
})
@Generated("io.micronaut.openapi.generator.JavaMicronautServerCodegen")
@Introspected
public class ValidateRegistryCredsRequest {

    public static final String JSON_PROPERTY_REGISTRY = "registry";
    public static final String JSON_PROPERTY_USER_NAME = "userName";
    public static final String JSON_PROPERTY_PASSWORD = "password";

    /**
     * Registry server
     */
    @Nullable(inherited = true)
    @JsonProperty(JSON_PROPERTY_REGISTRY)
    @JsonInclude(JsonInclude.Include.USE_DEFAULTS)
    private String registry;

    /**
     * Username
     */
    @Nullable(inherited = true)
    @JsonProperty(JSON_PROPERTY_USER_NAME)
    @JsonInclude(JsonInclude.Include.USE_DEFAULTS)
    private String userName;

    /**
     * Password
     */
    @Nullable(inherited = true)
    @JsonProperty(JSON_PROPERTY_PASSWORD)
    @JsonInclude(JsonInclude.Include.USE_DEFAULTS)
    private String password;

    /**
     * Registry server
     *
     * @return the registry property value
     */
    public String getRegistry() {
        return registry;
    }

    /**
     * Set the registry property value
     *
     * @param registry property value to set
     */
    public void setRegistry(String registry) {
        this.registry = registry;
    }

    /**
     * Set registry in a chainable fashion.
     *
     * @return The same instance of ValidateRegistryCredsRequest for chaining.
     */
    public ValidateRegistryCredsRequest registry(String registry) {
        this.registry = registry;
        return this;
    }

    /**
     * Username
     *
     * @return the userName property value
     */
    public String getUserName() {
        return userName;
    }

    /**
     * Set the userName property value
     *
     * @param userName property value to set
     */
    public void setUserName(String userName) {
        this.userName = userName;
    }

    /**
     * Set userName in a chainable fashion.
     *
     * @return The same instance of ValidateRegistryCredsRequest for chaining.
     */
    public ValidateRegistryCredsRequest userName(String userName) {
        this.userName = userName;
        return this;
    }

    /**
     * Password
     *
     * @return the password property value
     */
    public String getPassword() {
        return password;
    }

    /**
     * Set the password property value
     *
     * @param password property value to set
     */
    public void setPassword(String password) {
        this.password = password;
    }

    /**
     * Set password in a chainable fashion.
     *
     * @return The same instance of ValidateRegistryCredsRequest for chaining.
     */
    public ValidateRegistryCredsRequest password(String password) {
        this.password = password;
        return this;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        var validateRegistryCredsRequest = (ValidateRegistryCredsRequest) o;
        return Objects.equals(registry, validateRegistryCredsRequest.registry)
            && Objects.equals(userName, validateRegistryCredsRequest.userName)
            && Objects.equals(password, validateRegistryCredsRequest.password);
    }

    @Override
    public int hashCode() {
        return Objects.hash(registry, userName, password);
    }

    @Override
    public String toString() {
        return "ValidateRegistryCredsRequest("
            + "registry: " + getRegistry() + ", "
            + "userName: " + getUserName() + ", "
            + "password: " + getPassword()
            + ")";
    }

}
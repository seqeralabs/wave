/*
 * Wave API
 * Wave Containers Provisioning Service API A comprehensive container orchestration and build service
 *
 * The version of the OpenAPI document: 1.25.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package io.seqera.wave.api.schema.v0;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.function.Function;
import java.util.stream.Collectors;
import com.fasterxml.jackson.annotation.*;
import io.micronaut.serde.annotation.Serdeable;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;
import io.micronaut.core.annotation.Nullable;
import jakarta.annotation.Generated;

/**
 * Container status
 */
@Serdeable
@Generated("io.micronaut.openapi.generator.JavaMicronautServerCodegen")
public enum ContainerStatus {

    @JsonProperty("PENDING")
    PENDING("PENDING"),
    @JsonProperty("BUILDING")
    BUILDING("BUILDING"),
    @JsonProperty("DONE")
    DONE("DONE"),
    @JsonProperty("ERROR")
    ERROR("ERROR"),
    ;

    public static final Map<String, ContainerStatus> VALUE_MAPPING = Map.copyOf(Arrays.stream(values())
        .collect(Collectors.toMap(v -> v.value, Function.identity())));

    private final String value;

    ContainerStatus(String value) {
        this.value = value;
    }

    /**
     * @return The value represented by this enum
     */
    @JsonValue
    public String getValue() {
        return value;
    }

    @Override
    public String toString() {
        return String.valueOf(value);
    }

    /**
     * Create this enum from a value.
     *
     * @param value The value
     *
     * @return The enum
     */
    @JsonCreator
    public static ContainerStatus fromValue(String value) {
        if (!VALUE_MAPPING.containsKey(value)) {
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }
        return VALUE_MAPPING.get(value);
    }
}
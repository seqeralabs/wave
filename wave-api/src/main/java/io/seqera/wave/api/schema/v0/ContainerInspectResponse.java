/*
 * Wave API
 * Wave Containers Provisioning Service API A comprehensive container orchestration and build service
 *
 * The version of the OpenAPI document: 1.25.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package io.seqera.wave.api.schema.v0;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.function.Function;
import java.util.stream.Collectors;
import io.seqera.wave.api.schema.v0.ContainerConfig;
import java.util.HashMap;
import java.util.Map;
import com.fasterxml.jackson.annotation.*;
import io.micronaut.serde.annotation.Serdeable;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;
import io.micronaut.core.annotation.Nullable;
import jakarta.annotation.Generated;

/**
 * Container inspect response
 */
@Serdeable
@JsonPropertyOrder({
    ContainerInspectResponse.JSON_PROPERTY_CONFIG,
    ContainerInspectResponse.JSON_PROPERTY_MANIFEST,
})
@Generated("io.micronaut.openapi.generator.JavaMicronautServerCodegen")
public class ContainerInspectResponse {

    public static final String JSON_PROPERTY_CONFIG = "config";
    public static final String JSON_PROPERTY_MANIFEST = "manifest";

    /**
     * Container configuration
     */
    @Nullable(inherited = true)
    @Valid
    @JsonProperty(JSON_PROPERTY_CONFIG)
    @JsonInclude(JsonInclude.Include.USE_DEFAULTS)
    private ContainerConfig config;

    /**
     * Container manifest
     */
    @Nullable(inherited = true)
    @JsonProperty(JSON_PROPERTY_MANIFEST)
    @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
    private Map<String, Object> manifest;

    /**
     * Container configuration
     *
     * @return the config property value
     */
    public ContainerConfig getConfig() {
        return config;
    }

    /**
     * Set the config property value
     *
     * @param config property value to set
     */
    public void setConfig(ContainerConfig config) {
        this.config = config;
    }

    /**
     * Set config in a chainable fashion.
     *
     * @return The same instance of ContainerInspectResponse for chaining.
     */
    public ContainerInspectResponse config(ContainerConfig config) {
        this.config = config;
        return this;
    }

    /**
     * Container manifest
     *
     * @return the manifest property value
     */
    public Map<String, Object> getManifest() {
        return manifest;
    }

    /**
     * Set the manifest property value
     *
     * @param manifest property value to set
     */
    public void setManifest(Map<String, Object> manifest) {
        this.manifest = manifest;
    }

    /**
     * Set manifest in a chainable fashion.
     *
     * @return The same instance of ContainerInspectResponse for chaining.
     */
    public ContainerInspectResponse manifest(Map<String, Object> manifest) {
        this.manifest = manifest;
        return this;
    }

    /**
     * Set the value for the key for the manifest map property in a chainable fashion.
     *
     * @return The same instance of ContainerInspectResponse for chaining.
     */
    public ContainerInspectResponse putManifestItem(String key, Object manifestItem) {
        if (manifest == null) {
            manifest = new HashMap<>();
        }
        manifest.put(key, manifestItem);
        return this;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        var containerInspectResponse = (ContainerInspectResponse) o;
        return Objects.equals(config, containerInspectResponse.config)
            && Objects.equals(manifest, containerInspectResponse.manifest);
    }

    @Override
    public int hashCode() {
        return Objects.hash(config, manifest);
    }

    @Override
    public String toString() {
        return "ContainerInspectResponse("
            + "config: " + getConfig() + ", "
            + "manifest: " + getManifest()
            + ")";
    }

}
/*
 * Wave API
 * Wave Containers Provisioning Service API A comprehensive container orchestration and build service
 *
 * The version of the OpenAPI document: 1.25.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package io.seqera.wave.api.schema.v0;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.function.Function;
import java.util.stream.Collectors;
import io.seqera.wave.api.schema.v0.ContainerStatus;
import java.time.ZonedDateTime;
import com.fasterxml.jackson.annotation.*;
import io.micronaut.serde.annotation.Serdeable;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;
import io.micronaut.core.annotation.Nullable;
import jakarta.annotation.Generated;

/**
 * Container status response
 */
@Serdeable
@JsonPropertyOrder({
    ContainerStatusResponse.JSON_PROPERTY_ID,
    ContainerStatusResponse.JSON_PROPERTY_STATUS,
    ContainerStatusResponse.JSON_PROPERTY_STATUS_MESSAGE,
    ContainerStatusResponse.JSON_PROPERTY_TARGET_IMAGE,
    ContainerStatusResponse.JSON_PROPERTY_EXPIRATION,
    ContainerStatusResponse.JSON_PROPERTY_BUILD_ID,
    ContainerStatusResponse.JSON_PROPERTY_BUILD_STATUS,
    ContainerStatusResponse.JSON_PROPERTY_SCAN_ID,
    ContainerStatusResponse.JSON_PROPERTY_SCAN_STATUS,
})
@Generated("io.micronaut.openapi.generator.JavaMicronautServerCodegen")
public class ContainerStatusResponse {

    public static final String JSON_PROPERTY_ID = "id";
    public static final String JSON_PROPERTY_STATUS = "status";
    public static final String JSON_PROPERTY_STATUS_MESSAGE = "statusMessage";
    public static final String JSON_PROPERTY_TARGET_IMAGE = "targetImage";
    public static final String JSON_PROPERTY_EXPIRATION = "expiration";
    public static final String JSON_PROPERTY_BUILD_ID = "buildId";
    public static final String JSON_PROPERTY_BUILD_STATUS = "buildStatus";
    public static final String JSON_PROPERTY_SCAN_ID = "scanId";
    public static final String JSON_PROPERTY_SCAN_STATUS = "scanStatus";

    /**
     * Request ID
     */
    @Nullable(inherited = true)
    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(JsonInclude.Include.USE_DEFAULTS)
    private String id;

    /**
     * Container status
     */
    @Nullable(inherited = true)
    @JsonProperty(JSON_PROPERTY_STATUS)
    @JsonInclude(JsonInclude.Include.USE_DEFAULTS)
    private ContainerStatus status;

    /**
     * Status message
     */
    @Nullable(inherited = true)
    @JsonProperty(JSON_PROPERTY_STATUS_MESSAGE)
    @JsonInclude(JsonInclude.Include.USE_DEFAULTS)
    private String statusMessage;

    /**
     * Target image
     */
    @Nullable(inherited = true)
    @JsonProperty(JSON_PROPERTY_TARGET_IMAGE)
    @JsonInclude(JsonInclude.Include.USE_DEFAULTS)
    private String targetImage;

    /**
     * Expiration time
     */
    @Nullable(inherited = true)
    @JsonProperty(JSON_PROPERTY_EXPIRATION)
    @JsonInclude(JsonInclude.Include.USE_DEFAULTS)
    private ZonedDateTime expiration;

    /**
     * Build ID
     */
    @Nullable(inherited = true)
    @JsonProperty(JSON_PROPERTY_BUILD_ID)
    @JsonInclude(JsonInclude.Include.USE_DEFAULTS)
    private String buildId;

    /**
     * Build status
     */
    @Nullable(inherited = true)
    @JsonProperty(JSON_PROPERTY_BUILD_STATUS)
    @JsonInclude(JsonInclude.Include.USE_DEFAULTS)
    private String buildStatus;

    /**
     * Scan ID
     */
    @Nullable(inherited = true)
    @JsonProperty(JSON_PROPERTY_SCAN_ID)
    @JsonInclude(JsonInclude.Include.USE_DEFAULTS)
    private String scanId;

    /**
     * Scan status
     */
    @Nullable(inherited = true)
    @JsonProperty(JSON_PROPERTY_SCAN_STATUS)
    @JsonInclude(JsonInclude.Include.USE_DEFAULTS)
    private String scanStatus;

    /**
     * Request ID
     *
     * @return the id property value
     */
    public String getId() {
        return id;
    }

    /**
     * Set the id property value
     *
     * @param id property value to set
     */
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Set id in a chainable fashion.
     *
     * @return The same instance of ContainerStatusResponse for chaining.
     */
    public ContainerStatusResponse id(String id) {
        this.id = id;
        return this;
    }

    /**
     * Container status
     *
     * @return the status property value
     */
    public ContainerStatus getStatus() {
        return status;
    }

    /**
     * Set the status property value
     *
     * @param status property value to set
     */
    public void setStatus(ContainerStatus status) {
        this.status = status;
    }

    /**
     * Set status in a chainable fashion.
     *
     * @return The same instance of ContainerStatusResponse for chaining.
     */
    public ContainerStatusResponse status(ContainerStatus status) {
        this.status = status;
        return this;
    }

    /**
     * Status message
     *
     * @return the statusMessage property value
     */
    public String getStatusMessage() {
        return statusMessage;
    }

    /**
     * Set the statusMessage property value
     *
     * @param statusMessage property value to set
     */
    public void setStatusMessage(String statusMessage) {
        this.statusMessage = statusMessage;
    }

    /**
     * Set statusMessage in a chainable fashion.
     *
     * @return The same instance of ContainerStatusResponse for chaining.
     */
    public ContainerStatusResponse statusMessage(String statusMessage) {
        this.statusMessage = statusMessage;
        return this;
    }

    /**
     * Target image
     *
     * @return the targetImage property value
     */
    public String getTargetImage() {
        return targetImage;
    }

    /**
     * Set the targetImage property value
     *
     * @param targetImage property value to set
     */
    public void setTargetImage(String targetImage) {
        this.targetImage = targetImage;
    }

    /**
     * Set targetImage in a chainable fashion.
     *
     * @return The same instance of ContainerStatusResponse for chaining.
     */
    public ContainerStatusResponse targetImage(String targetImage) {
        this.targetImage = targetImage;
        return this;
    }

    /**
     * Expiration time
     *
     * @return the expiration property value
     */
    public ZonedDateTime getExpiration() {
        return expiration;
    }

    /**
     * Set the expiration property value
     *
     * @param expiration property value to set
     */
    public void setExpiration(ZonedDateTime expiration) {
        this.expiration = expiration;
    }

    /**
     * Set expiration in a chainable fashion.
     *
     * @return The same instance of ContainerStatusResponse for chaining.
     */
    public ContainerStatusResponse expiration(ZonedDateTime expiration) {
        this.expiration = expiration;
        return this;
    }

    /**
     * Build ID
     *
     * @return the buildId property value
     */
    public String getBuildId() {
        return buildId;
    }

    /**
     * Set the buildId property value
     *
     * @param buildId property value to set
     */
    public void setBuildId(String buildId) {
        this.buildId = buildId;
    }

    /**
     * Set buildId in a chainable fashion.
     *
     * @return The same instance of ContainerStatusResponse for chaining.
     */
    public ContainerStatusResponse buildId(String buildId) {
        this.buildId = buildId;
        return this;
    }

    /**
     * Build status
     *
     * @return the buildStatus property value
     */
    public String getBuildStatus() {
        return buildStatus;
    }

    /**
     * Set the buildStatus property value
     *
     * @param buildStatus property value to set
     */
    public void setBuildStatus(String buildStatus) {
        this.buildStatus = buildStatus;
    }

    /**
     * Set buildStatus in a chainable fashion.
     *
     * @return The same instance of ContainerStatusResponse for chaining.
     */
    public ContainerStatusResponse buildStatus(String buildStatus) {
        this.buildStatus = buildStatus;
        return this;
    }

    /**
     * Scan ID
     *
     * @return the scanId property value
     */
    public String getScanId() {
        return scanId;
    }

    /**
     * Set the scanId property value
     *
     * @param scanId property value to set
     */
    public void setScanId(String scanId) {
        this.scanId = scanId;
    }

    /**
     * Set scanId in a chainable fashion.
     *
     * @return The same instance of ContainerStatusResponse for chaining.
     */
    public ContainerStatusResponse scanId(String scanId) {
        this.scanId = scanId;
        return this;
    }

    /**
     * Scan status
     *
     * @return the scanStatus property value
     */
    public String getScanStatus() {
        return scanStatus;
    }

    /**
     * Set the scanStatus property value
     *
     * @param scanStatus property value to set
     */
    public void setScanStatus(String scanStatus) {
        this.scanStatus = scanStatus;
    }

    /**
     * Set scanStatus in a chainable fashion.
     *
     * @return The same instance of ContainerStatusResponse for chaining.
     */
    public ContainerStatusResponse scanStatus(String scanStatus) {
        this.scanStatus = scanStatus;
        return this;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        var containerStatusResponse = (ContainerStatusResponse) o;
        return Objects.equals(id, containerStatusResponse.id)
            && Objects.equals(status, containerStatusResponse.status)
            && Objects.equals(statusMessage, containerStatusResponse.statusMessage)
            && Objects.equals(targetImage, containerStatusResponse.targetImage)
            && Objects.equals(expiration, containerStatusResponse.expiration)
            && Objects.equals(buildId, containerStatusResponse.buildId)
            && Objects.equals(buildStatus, containerStatusResponse.buildStatus)
            && Objects.equals(scanId, containerStatusResponse.scanId)
            && Objects.equals(scanStatus, containerStatusResponse.scanStatus);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, status, statusMessage, targetImage, expiration, buildId, buildStatus, scanId, scanStatus);
    }

    @Override
    public String toString() {
        return "ContainerStatusResponse("
            + "id: " + getId() + ", "
            + "status: " + getStatus() + ", "
            + "statusMessage: " + getStatusMessage() + ", "
            + "targetImage: " + getTargetImage() + ", "
            + "expiration: " + getExpiration() + ", "
            + "buildId: " + getBuildId() + ", "
            + "buildStatus: " + getBuildStatus() + ", "
            + "scanId: " + getScanId() + ", "
            + "scanStatus: " + getScanStatus()
            + ")";
    }

}